
#--COMUNICACAO ENTRE BANCOS

    #-- criando database e tabela onde ira armazenar dados

CREATE DATABASE LOJA;

USE LOJA;

CREATE TABLE PRODUTO(
	IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR (30),
	VALOR FLOAT (10,2)
);

    # criando database e tabela que sera usada para armazenar alteracoes, informacao adicionada e excluida

CREATE DATABASE BACKUP;

USE BACKUP;

CREATE TABLE BKP_PRODUTO(
	IDBKP INT PRIMARY KEY AUTO_INCREMENT,
	IDPRODUTO INT,
	NOME VARCHAR (30),
	VALOR FLOAT (10,2)
);



    # CRIANDO BACKUP DA TABELA PRODUTO PARA TABELA BACKUP

USE LOJA;


DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO
BEFORE INSERT ON PRODUTO
FOR EACH ROW
BEGIN

	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,NEW.IDPRODUTO,
	NEW.NOME,NEW.VALOR);

END
$

DELIMITER ;



    # INSERINDO DADOS PARA TESTE


INSERT INTO PRODUTO VALUES (NULL,'LIVRO MODELAGEM',50.00);
INSERT INTO PRODUTO VALUES (NULL,'LIVRO BI',80.00);
INSERT INTO PRODUTO VALUES (NULL,'LIVRO ORACLE',70.00);
INSERT INTO PRODUTO VALUES (NULL,'LIVRO SQL SERVER',100.00);


# TESTANDO ADICIONADOS

SELECT * FROM PRODUTO;

# TESTANDO ADICIONADOS NA DATABASE BACKUP

SELECT * FROM BACKUP.BKP_PRODUTO;


# CRIANDO TRIGGER PARA ADICIONAR DELETADOS A DATABASE BACKUP

DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO_DEL
BEFORE DELETE ON PRODUTO
FOR EACH ROW
BEGIN

	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,OLD.IDPRODUTO,
	OLD.NOME,OLD.VALOR);

END
$

DELIMITER ;


# APAGANDO INFORMACAO DA TABELA PRODUTO PARA IR A DATABASE DE BACKUP

DELETE FROM PRODUTO WHERE IDPRODUTO = 2;



SELECT * FROM BACKUP.BKP_PRODUTO;


# -- ALTERANDO TABELA BKP_PRODUTO PARA RECEBER NOVA INFORMACAO
# -- AGORA SABEREMOS QUANDO UM ITEM FOI INSERIDO OU DELETADO NO
# -- REGISTRO DATABASE

ALTER TABLE BACKUP.BKP_PRODUTO
ADD EVENTO CHAR(1);

#AJUSTANDO TRIGGER
DROP TRIGGER BACKUP_PRODUTO_DEL;

# ADICIONANDO NOVA TRIGGER COM DIFERENCIACOES OLD, USEI D DE DELETE

DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO_DEL
BEFORE DELETE ON PRODUTO
FOR EACH ROW
BEGIN

	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,OLD.IDPRODUTO,
	OLD.NOME,OLD.VALOR,'D');

END
$

DELIMITER ;


# CRIANDO TRIGGER PARA ITENS NOVOS, USEI 'I' DE INSERT.

DROP TRIGGER BACKUP_PRODUTO;


DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO
BEFORE INSERT ON PRODUTO
FOR EACH ROW
BEGIN

	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,NEW.IDPRODUTO,
	NEW.NOME,NEW.VALOR,'I');

END
$

DELIMITER ;




# INSERINDO INFORMACOES NA NOVA DATABASE 

INSERT INTO PRODUTO VALUES (NULL,'CANETA',2.5);
INSERT INTO PRODUTO VALUES (NULL,'CADERNO',9.99);
INSERT INTO PRODUTO VALUES (NULL,'LIVRO POWER POINT',25.90);

DELETE FROM PRODUTO
WHERE IDPRODUTO = 5;

DELETE FROM PRODUTO
WHERE IDPRODUTO = 7;




# CONFERINDO TRIGGER DE DIFERENCA ENTRE ADICIONADOS E EXCLUIDOS

SELECT * FROM BACKUP.BKP_PRODUTO;
